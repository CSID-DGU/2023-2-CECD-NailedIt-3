input {
       kafka {
              bootstrap_servers => "kafka-kraft1:9092,kafka-kraft2:9093,kafka-kraft3:9094"
               topics => ["log"] 
               codec => "json"              
       }
}

filter {
    json {
        source => "json"
    }
    mutate {
       convert => {
           "id"=> "float"
           "pH" => "float"
           "DO" => "float" 
           "temperature" => "float"
           "conductivity" => "float"
       }
       add_field => {
        "[ecs][version]" => "1.5.0"
        "[event][kind]" => "event"
        "[event][category]" => "host"
        "[event][type]" => ["info"]
        "[event][dataset]" => "test"
       }
    }
    # grok {
    #     match => {   
    #         "message" => "timestamp: %{TIMESTAMP_ISO8601:timestamp}, id: %{NUMBER:id}, pH: %{NUMBER:pH}, DO\(PPM\): %{NUMBER:DO}, salinity\(%\): %{NUMBER:salinity}, turbidity\(NTU\): %{NUMBER:turbidity}, ammonia\(mg/L\): %{NUMBER:ammonia}"
    #     }
    # }
    # mutate {
    #    convert => {
    #        "id"=> "float"
    #        "pH" => "float"
    #        "DO" => "float" 
    #        "salinity" => "float" 
    #        "turbidity" => "float" 
    #        "ammonia" => "float" 

    #    }
    #    add_field => {
    #     "[ecs][version]" => "1.5.0"
    #     "[event][kind]" => "event"
    #     "[event][category]" => "host"
    #     "[event][type]" => ["info"]
    #     "[event][dataset]" => "test"
    #    }
    # }
}

output {
       # 처리한 로그를 Elastic 서버로 전송
       elasticsearch {
               # TODO 각자의 서버에 맞게 IP 변경
               hosts => "elasticsearch:9200"
               index => "we_are_happy2"  # 새 인덱스 이름으로 변경
               user => "elastic"
               password => "capstone3"
       }
}
